

services:
  # 后端 FastAPI 服务
  backend:
    build: ./backend
    restart: unless-stopped
    env_file:
      - ./backend/.env
    ports:
      - "8000:8000"
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_started
    volumes:
      - ./backend/app:/app/app
      - ./backend/alembic:/app/alembic # 挂载 alembic 目录
    command: bash -c "alembic upgrade head && uvicorn app.api.main:app --host 0.0.0.0 --port 8000"
    networks:
      - app-network

  # 前端 Vue 服务 (由 Nginx 托管)
  frontend:
    build: ./frontend
    restart: unless-stopped
    ports:
      - "80:80"
    depends_on:
      - backend
    networks:
      - app-network

  # Redis 服务
  redis:
    image: "redis:7-alpine"
    restart: unless-stopped
    volumes:
      - redis_data:/data
    networks:
      - app-network
    healthcheck:
        test: ["CMD", "redis-cli", "ping"]
        interval: 10s
        timeout: 5s
        retries: 5

  # PostgreSQL 数据库服务
  postgres:
    image: "postgres:16-alpine"
    restart: unless-stopped
    env_file:
      - ./backend/.env # 注意：这里路径需要相对于 docker-compose.yml 文件
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - app-network

  # pgAdmin 服务
  pgadmin:
    image: "dpage/pgadmin4:latest"
    restart: unless-stopped
    env_file:
      - ./backend/.env # 注意：这里路径需要相对于 docker-compose.yml 文件
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD}
    ports:
      - "8088:80"
    depends_on:
      postgres:
        condition: service_healthy
    volumes:
      - pgadmin_data:/var/lib/pgadmin
    networks:
      - app-network

networks:
  app-network:
    driver: bridge

volumes:
  postgres_data:
  pgadmin_data:
  redis_data:
